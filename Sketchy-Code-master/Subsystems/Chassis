/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.wpi.first.wpilibj.templates.subsystems;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.templates.RobotMap;
import edu.wpi.first.wpilibj.templates.commands.DriveWithJoystick;

/**
 *
 * @author Robert
 */
public class Chassis extends Subsystem {
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    
    private static Chassis instance = null;
    private RobotDrive drive;
    Joystick leftStick = new Joystick(RobotMap.LEFT_JOYSTICK_PORT);
    Joystick rightStick = new Joystick(RobotMap.RIGHT_JOYSTICK_PORT);
    
    
    //check and see if chasis has been instantiated yet. If not, create a new one
    public static Chassis getInstance() {
        if (instance == null) {
            instance = new Chassis();
            instance.setDefaultCommand(new DriveWithJoystick());
            /*
            System.out.print("Chassis getInstance created.\r\n");
            System.out.print("Left motor port: " + RobotMap.LEFTDRIVE_MOTOR_PORT + "\r\n");
            System.out.print("Right motor port: " + RobotMap.RIGHTDRIVE_MOTOR_PORT + "\r\n");
            */
        }
        //System.out.print("Chassis getInstance called.\r\n");
        return instance;
    }
    
    //instantiate a new Chassis
     private Chassis() {
        drive = new RobotDrive(RobotMap.LEFTDRIVE_MOTOR_PORT, RobotMap.RIGHTDRIVE_MOTOR_PORT);
        drive.setSafetyEnabled(false);
    }
    
     
     public void driveWithJoystick() {
         //System.out.print("driveWithJoystick called. Remove this line after debugging.");
         drive.tankDrive(rightStick, leftStick);
     }
    
    public void driveWithValues(double left, double right)
    {
        drive.tankDrive(left, right);
    }

    public void initDefaultCommand() {
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
}
